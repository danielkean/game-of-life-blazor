@using GameOfLife.Models
@using GameOfLife.Components.Icons

@inject GameOfLife.Services.GameOfLifeService GameOfLife

@code
{
    protected override void OnInitialized()
    {
        GameOfLife.OnGenerationTick += StateHasChanged;
    }
}

<div class="game-of-life">
    <h1>Conway's Game of Life</h1>

    <div class="icons">
        <ImageButton Url="https://github.com/danielkean/game-of-life-blazor" ImageColor="#181818"><CodeIcon/></ImageButton>
        <ImageButton Url="https://en.wikipedia.org/wiki/Conway's_Game_of_Life" ImageColor="#181818"><InfoIcon/></ImageButton>
        <ImageButton Url="https://danielkean.com" ImageColor="#181818"><UserIcon/></ImageButton>
    </div>

    <div class="top-panel">
        <div class="controls">
            @if (GameOfLife.IsRunning)
            {
                <button class="button stop" @onclick=@(() => GameOfLife.Stop())><span class="oi oi-media-pause"></span></button>
            }
            else
            {
                <button class="button run" @onclick=@(async () => await GameOfLife.Run())><span class="oi oi-media-play"></span></button>
                <button class="button tick" @onclick=@(() => GameOfLife.Tick())><span class="oi oi-media-skip-forward"></span></button>
                <button class="button reset" @onclick=@(() => GameOfLife.Reset())><span class="oi oi-reload"></span></button>
            }
        </div>

        <div class="text-info">
            <p><strong>Current Generation:</strong> @GameOfLife.GenerationCount</p>
            <p><strong>Population:</strong> @GameOfLife.Generation.PopulationCount</p>
        </div>
    </div>

    <div class="grid-container">
        <div class="grid">
            @for (int row = 0; row < GameOfLife.Rows; row++)
            {
                for (int column = 0; column < GameOfLife.Columns; column++)
                {
                    int currentRow = row;
                    int currentColumn = column;

                    <div class="cell @(GameOfLife.Generation.Cells[row, column].CurrentState == CellState.Alive ? "alive" : "")" @onclick="(() => GameOfLife.ToggleCell(currentRow, currentColumn))"></div>
                }
            }
        </div>
    </div>
</div>
